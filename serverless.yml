service: serverless-syslog-s3-sample
frameworkVersion: '3'
# plugins:
#   - serverless-plugin-log-subscription

provider:
  name: aws
  runtime: nodejs18.x
  region: ap-northeast-1
  stage: dev
  logRetentionInDays: 1

functions:
  hello:
    handler: handler.hello
    events:
      - httpApi:
        path: /hello
        method: get

resources:
  Resources:
    cloudWatchLogsSubscriptionFilter:
      Type: AWS::Logs::SubscriptionFilter
      Properties:
        LogGroupName: /aws/lambda/${self:service}-${self:provider.stage}-hello
        DestinationArn: !GetAtt 'firehoseDeliveryStream.Arn'
        FilterPattern: ""
        RoleArn: !GetAtt 'LogsRole.Arn'

    LogsRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service: !Sub 'logs.${AWS::Region}.amazonaws.com'
              Action:
                - sts:AssumeRole
        Path: /
        Policies:
          - PolicyName: root
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - firehose:*
                  Resource: !GetAtt 'firehoseDeliveryStream.Arn'

    firehoseDeliveryStream:
      Type: AWS::KinesisFirehose::DeliveryStream
      Properties:
        DeliveryStreamName: syslog-firehose-stream
        DeliveryStreamType: DirectPut
        S3DestinationConfiguration:
          BucketARN: arn:aws:s3:::serverless-syslog-s3-sample-bucket
          BufferingHints:
            IntervalInSeconds: 60
            SizeInMBs: 1
          CompressionFormat: GZIP
          Prefix: logs/
          RoleARN: !GetAtt 'firehoseRole.Arn'

    firehoseRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: firehose-role
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service: firehose.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: FirehosePolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - s3:PutObject
                  Resource: arn:aws:s3:::serverless-syslog-s3-sample-bucket/*

    syslogS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: serverless-syslog-s3-sample-bucket

    

package:
  exclude:
    - .editorconfig
    - .git
    - .gitignore
    - docker.env
    - docker.env.sample
    - compose.yaml
    - Dockerfile.dev
    - README.md
